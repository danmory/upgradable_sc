#include "imports/stdlib.fc";

const op::increase = "op::increase"c; ;; 7e8764ef
const op::upgrade = "op::upgrade"c; ;; dbfaf817


global int ctx_counter;


() load_data() impure {
    var ds = get_data().begin_parse();
    ctx_counter = ds~load_uint(32);
    ds.end_parse();
}


() save_data() impure {
    set_data(
        begin_cell()
            .store_uint(ctx_counter, 32)
            .end_cell()
    );
}


() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) {
        return ();
    }
    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4); 
    if (flags & 1) { ;; ignore all bounced messages
        return ();
    }
    int op = in_msg_body~load_uint(32);
    if (op == op::increase) {
        load_data();
        ctx_counter += 1;
        save_data();
        return ();
    }
    if (op == op::upgrade) {
        cell code = in_msg_body~load_ref();
        throw_if(35, code.null?());
        set_code(code);
        return ();
    }
    throw(0xffff);
}


(int) get_counter() method_id {
    load_data();
    return ctx_counter;
}
